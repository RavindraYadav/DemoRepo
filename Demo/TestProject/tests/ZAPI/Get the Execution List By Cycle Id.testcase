<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase failureBehaviour="Continue" id="9" registryId="cfde6494-3f9b-4d37-b0a8-bb0d6ac7f349" visibility="Internal">
  <summary/>
  <steps>
    <caseCall testCaseId="d1ee6bd1-c8ca-4877-8f5b-c3387ca0f719" testCasePath="tests/ZAPI/Generate JWT Token.testcase" testItemId="1">
      <tags/>
      <arguments>
        <argument id="AccessKey">
          <value class="value" valueClass="string">ZmQyYWZhNWUtYmE5NC0zNDYyLTliM2QtMDMxMTgxNWY5NWY5IGFkbWluIGFkbWlu</value>
        </argument>
        <argument id="SecretKey">
          <value class="value" valueClass="string">Ei02EWRti72C08z7LP2lOGnwAPtYao8mYMzaMJpTiaU</value>
        </argument>
        <argument id="UserName">
          <value class="value" valueClass="string">admin</value>
        </argument>
        <argument id="ResourceURL">
          <value class="compound">
            <parts>
              <value valueClass="string">/public/rest/api/1.0/executions/search/cycle/</value>
              <variable>
                <path element="CycleId"/>
              </variable>
              <value valueClass="string">?versionId=</value>
              <variable>
                <path element="VersionId"/>
              </variable>
              <value valueClass="string">&amp;projectId=</value>
              <variable>
                <path element="ProjectId"/>
              </variable>
            </parts>
          </value>
        </argument>
        <argument id="Method">
          <value class="value" valueClass="string">GET</value>
        </argument>
      </arguments>
      <outputArguments>
        <outputArgument id="Token">
          <name class="value" valueClass="string">Token</name>
        </outputArgument>
      </outputArguments>
    </caseCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="8" title="Set Values: a">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">a</value>
              </namedValue>
              <namedValue name="value">
                <value class="compound">
                  <parts>
                    <value valueClass="string">Authorization:</value>
                    <variable>
                      <path element="Token"/>
                    </variable>
                    <value valueClass="string">zapiAccessKey:ZmQyYWZhNWUtYmE5NC0zNDYyLTliM2QtMDMxMTgxNWY5NWY5IGFkbWluIGFkbWlu</value>
                  </parts>
                </value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.WebConnect" name="WebConnect" testItemId="2" title="Web Connect: WebServiceConnection">
      <arguments>
        <argument id="connectionName">
          <value class="value" valueClass="string">RestNew</value>
        </argument>
        <argument id="resultName">
          <value class="value" valueClass="string">WebServiceConnection</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.RestRequest" name="RestRequest" testItemId="3" title="Web Request (HTTP/REST): â‡’GetExecutionList">
      <arguments>
        <argument id="connectionName">
          <value class="value" valueClass="string">WebServiceConnection</value>
        </argument>
        <argument id="targetValue">
          <value class="restTarget" uri="rest:untyped?method=GET&amp;bodyStyle=JSON"/>
        </argument>
        <argument id="resultName">
          <value class="value" valueClass="string">GetExecutionList</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
        <argument id="statusResultName">
          <value class="value" valueClass="string">RestResponseStatus</value>
        </argument>
        <argument id="restResourceUrl">
          <value class="compound">
            <parts>
              <value valueClass="string">/public/rest/api/1.0/executions/search/cycle/</value>
              <variable>
                <path element="CycleId"/>
              </variable>
              <value valueClass="string">?versionId=</value>
              <variable>
                <path element="VersionId"/>
              </variable>
              <value valueClass="string">&amp;projectId=</value>
              <variable>
                <path element="ProjectId"/>
              </variable>
            </parts>
          </value>
        </argument>
        <argument id="restRequestHeader">
          <value class="variable">
            <path element="a"/>
          </value>
        </argument>
      </arguments>
      <generatedParameters>
        <apiParam group="request" internal="true" name="restResourceUrl" title="Resource URL">
          <type>
            <textType/>
          </type>
        </apiParam>
        <apiParam group="header" internal="true" name="restRequestHeader" title="Request Header">
          <type>
            <textType/>
          </type>
        </apiParam>
      </generatedParameters>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="4" title="Set Values: ExecutionList">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">ExecutionList</value>
              </namedValue>
              <namedValue name="value">
                <value class="variable">
                  <path element="GetExecutionList"/>
                  <path element="searchObjectList">
                    <filter class="conditionFilter">
                      <condition class="eq">
                        <lhs class="variable">
                          <path element="issueKey"/>
                        </lhs>
                        <rhs class="variable" topLevel="true">
                          <path element="TCId"/>
                        </rhs>
                      </condition>
                    </filter>
                  </path>
                </value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="6" title="Set Values: IssueId">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">ExecutionId</value>
              </namedValue>
              <namedValue name="value">
                <value class="variable">
                  <path element="ExecutionList"/>
                  <path element="execution"/>
                  <path element="id"/>
                </value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">IssueId</value>
              </namedValue>
              <namedValue name="value">
                <value class="variable">
                  <path element="ExecutionList"/>
                  <path element="execution"/>
                  <path element="issueId"/>
                </value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
  </steps>
  <params>
    <param name="CycleId" title="CycleId">
      <summary/>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="minLength">0</valueConstraint>
            <valueConstraint name="maxLength">9999</valueConstraint>
            <valueConstraint name="regex"/>
          </constraints>
        </textType>
      </type>
    </param>
    <param name="VersionId" title="VersionId">
      <summary/>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="minLength">0</valueConstraint>
            <valueConstraint name="maxLength">9999</valueConstraint>
            <valueConstraint name="regex"/>
          </constraints>
        </textType>
      </type>
    </param>
    <param name="ProjectId" title="ProjectId">
      <summary/>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="minLength">0</valueConstraint>
            <valueConstraint name="maxLength">9999</valueConstraint>
            <valueConstraint name="regex"/>
          </constraints>
        </textType>
      </type>
    </param>
    <param name="TCId" title="TC_Id">
      <summary/>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="minLength">0</valueConstraint>
            <valueConstraint name="maxLength">9999</valueConstraint>
            <valueConstraint name="regex"/>
          </constraints>
        </textType>
      </type>
    </param>
  </params>
  <outputParams>
    <param name="GetExecutionList" title="GetExecutionList">
      <summary>The name that the response will be stored under.</summary>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="minLength">0</valueConstraint>
            <valueConstraint name="maxLength">9999</valueConstraint>
            <valueConstraint name="regex"/>
          </constraints>
        </textType>
      </type>
      <sourceValue class="variable">
        <path element="GetExecutionList"/>
      </sourceValue>
    </param>
    <param name="ExecutionId" title="ExecutionId">
      <summary>The name of the value to be set.  May contain sub-values, e.g. 'Value1.SubValue1'.</summary>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="minLength">0</valueConstraint>
            <valueConstraint name="maxLength">9999</valueConstraint>
            <valueConstraint name="regex"/>
          </constraints>
        </textType>
      </type>
      <sourceValue class="variable">
        <path element="ExecutionId"/>
      </sourceValue>
    </param>
    <param name="IssueId" title="IssueId">
      <summary>The name of the value to be set.  May contain sub-values, e.g. 'Value1.SubValue1'.</summary>
      <type>
        <textType>
          <constraints>
            <valueConstraint name="minLength">0</valueConstraint>
            <valueConstraint name="maxLength">9999</valueConstraint>
            <valueConstraint name="regex"/>
          </constraints>
        </textType>
      </type>
      <sourceValue class="variable">
        <path element="IssueId"/>
      </sourceValue>
    </param>
  </outputParams>
  <args>
    <argument id="CycleId"/>
    <argument id="VersionId"/>
    <argument id="ProjectId"/>
    <argument id="TCId"/>
  </args>
  <outputArgs>
    <outputArgument id="GetExecutionList">
      <name class="value" valueClass="string">GetExecutionList</name>
    </outputArgument>
    <outputArgument id="ExecutionId">
      <name class="value" valueClass="string">ExecutionId</name>
    </outputArgument>
    <outputArgument id="IssueId">
      <name class="value" valueClass="string">IssueId</name>
    </outputArgument>
  </outputArgs>
</testCase>
